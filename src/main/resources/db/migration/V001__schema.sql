---
---
---

CREATE TABLE IF NOT EXISTS vet
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(30),
    last_name  VARCHAR(30)
);

CREATE INDEX IF NOT EXISTS vet_last_name ON vet (last_name);

---
---

CREATE TABLE IF NOT EXISTS specialty
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(80)
);

CREATE INDEX IF NOT EXISTS specialty_name ON specialty (name);

---
---

CREATE TABLE IF NOT EXISTS vet_specialty
(
    vet       INTEGER NOT NULL,
    specialty INTEGER NOT NULL
);

ALTER TABLE vet_specialty
    ADD CONSTRAINT fk_vet_specialty_vet FOREIGN KEY (vet) REFERENCES vet (id);
ALTER TABLE vet_specialty
    ADD CONSTRAINT fk_vet_specialty_specialty FOREIGN KEY (specialty) REFERENCES specialty (id);

---
---

CREATE TABLE IF NOT EXISTS pet_type
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(80)
);

CREATE INDEX IF NOT EXISTS pet_type_name ON pet_type (name);

---
---

CREATE TABLE IF NOT EXISTS owner
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR(30),
    last_name  VARCHAR(30),
    address    VARCHAR(255),
    city       VARCHAR(80),
    telephone  VARCHAR(20)
);

CREATE INDEX IF NOT EXISTS owner_last_name ON owner (lower(last_name));

---
---

CREATE TABLE IF NOT EXISTS pet
(
    id         INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name       VARCHAR(30),
    birth_date DATE,
    type_id    INTEGER NOT NULL,
    owner_id   INTEGER NOT NULL
);

ALTER TABLE pet
    ADD CONSTRAINT fk_pet_owners FOREIGN KEY (owner_id) REFERENCES owner (id);
ALTER TABLE pet
    ADD CONSTRAINT fk_pet_types FOREIGN KEY (type_id) REFERENCES pet_type (id);
CREATE INDEX IF NOT EXISTS pet_name ON pet (name);

---
---

CREATE TABLE IF NOT EXISTS visit
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pet_id      INTEGER NOT NULL,
    date        DATE,
    description VARCHAR(255)
);

ALTER TABLE visit
    ADD CONSTRAINT fk_visit_pets FOREIGN KEY (pet_id) REFERENCES pet (id);
CREATE INDEX IF NOT EXISTS visit_pet_id ON visit (pet_id);
